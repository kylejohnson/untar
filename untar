#!/usr/local/bin/perl

use strict;
use warnings;
use POSIX qw/strftime/;
use Getopt::Std;

my ($rpath, $verbose, $debug, $type, $tsdir, $model, $mgmt, $mgmt_ip, $date, $dir);
my $subpath = '';
our ($opt_h, $opt_v, $opt_V, $opt_q);
getopts('vV:qh');

&usage if ($opt_h);
$verbose = $opt_v;
if ($opt_V) {
 $verbose = $debug = $opt_V;
} else {
 $debug=0;
}

&log;
&check_env;

print "Done!\n";
exit 0;


### Subroutines ###

sub check_env {
 chomp($dir = `pwd`); # /var/Customer_Files/$CUSTOMER/$SR
 my $prefix=qw{/var/Customer_Files};
 ($subpath) = $dir =~ m/^$prefix\/(.*)$/; # Regex to match above path
 print "***subpath: $subpath\n" if ($debug >= 1);
 if (!$subpath) { # If not in above path
  &usage; 
 }
 
 my $ts = $ARGV[0] || &usage; # /uploads/today/results-123234234.tar.gz
 my $file_type = `file $ts`;
 my @ts = split('/', $ts); # Split up $ts into @ts
 $date = $ts[2]; # today || yyyymmdd
 $ts = quotemeta($ts);
 my $ts_file = $ts[3]; # FILE.tar.gz
 chomp($ts_file);
 if ($ts_file =~ /.tar.gz/ || $ts_file =~ /.tgz/) {
  chomp($tsdir = `tar -tf $ts | head -n1`); # The top-level directory inside the troubleshoot
 }
 $ts = $ts[3]; # FILE.tar.gz
 my @dir = split('/', $dir); # Split up $dir into @dir
 my $today = strftime('%Y%m%d',localtime); # E.g., YYYYMMDD
 if ($date =~ /today/) { # If $date is in 'today' form
  $date = $today; # Set $date as YYYYMMDD
 }
 
 $rpath = "/zstore/uploads/$date/$ts"; # Full path to troubleshoot on multivac
 $rpath = quotemeta($rpath);
 $subpath = $subpath . "/$date";
 $subpath = quotemeta($subpath);

 if ($file_type =~ /tar archive/) {
  &extract_file('tarball');
 } elsif ($file_type =~ /Zip archive/) {
  &extract_file('zipfile');
 } elsif ($tsdir =~ /results-/) {
  &extract_file('troubleshoot');
 } elsif ($file_type =~ /gzip compressed data/) {
  &extract_file('gzip');
 } else {
  &usage;
 }
}

sub log {
 open(my $fh, "+>>", '/var/log/untar.log');
  print $fh localtime() . ": $ENV{'USER'}\n";
 close($fh);
}

sub extract_file {
 $type = shift; # Either 'troubleshooot', 'tarball' or 'zipfile'
 my $tar_opts = "xf";
 $tar_opts = "z".$tar_opts if ($verbose);
 $tar_opts = "v".$tar_opts if ($verbose);

 if ($type eq 'troubleshoot') {
  system("/usr/bin/ssh nfssupport\@multivac mkdir -p '/zstore/CustomerFiles/$subpath'");
  print "This is a $type!  Extracting...\n";
  system("/usr/bin/ssh nfssupport\@multivac /usr/bin/tar $tar_opts '$rpath' -C '/zstore/CustomerFiles/$subpath'");
  &fix_permissions;
  &rename_folder;
 } elsif ($type eq 'gzip') {
  system("/usr/bin/ssh nfssupport\@multivac mkdir -p '/zstore/CustomerFiles/$subpath'");
  print "This is a $type!  Trying to extract anyway...\n";
  system("/usr/bin/ssh nfssupport\@multivac /usr/bin/tar $tar_opts '$rpath' -C '/zstore/CustomerFiles/$subpath'");
  &fix_permissions;
 } elsif ($type eq 'zipfile') {
  system("/usr/bin/ssh nfssupport\@multivac mkdir -p '/zstore/CustomerFiles/$subpath'");
  print "This is a $type!  Trying to extract anyway...\n";
  system("/usr/bin/ssh nfssupport\@multivac 'cd /zstore/CustomerFiles/$subpath && /usr/local/bin/unzip '$rpath''");
 } elsif ($type eq 'tarball') {
  system("/usr/bin/ssh nfssupport\@multivac mkdir -p '/zstore/CustomerFiles/$subpath'");
  print "This is a $type!  Trying to extract anyway...\n";
  system("/usr/bin/ssh nfssupport\@multivac /usr/bin/tar $tar_opts '$rpath' -C '/zstore/CustomerFiles/$subpath'");
  &fix_permissions;
 }
}

sub call_ts_analysis {
 $tsdir = "$date/$model.$mgmt_ip";
 print "***chdir to: $dir/$tsdir\n" if ($debug >= 1);
 print "Running TS Analysis Script...\n";
 system("cd $dir/$tsdir && /usr/local/bin/tsanalysis.pl");
}

sub rename_folder {
 chomp($model = `grep 'MODEL=' $date/$tsdir/dir-archives/etc/sf/ims.conf | cut -f 2 -d =`);
 chomp($mgmt = `grep 'MANAGEMENT=' $date/$tsdir/dir-archives/etc/sf/ims.conf | cut -f 2 -d =`);
 chomp($mgmt_ip = `grep -A1 $mgmt $date/$tsdir/'command-outputs/ifconfig\ -a.output' |tail -n1|cut -f 2 -d :|cut -f1 -d ' '`);
 
 if ($model =~ /sensor/i) {
  $model = 'sensor';
 } elsif ($model =~ /defense/i) {
  $model = 'dc';
 } elsif ($model =~ /master/i) {
  $model = 'mdc';
 } else {
  $model = 'other';
 }
 
 print "Moving $tsdir to $model.$mgmt_ip...\n";
 `mv $date/$tsdir $date/$model.$mgmt_ip`;

 &call_ts_analysis;
}

sub fix_permissions {
 print "Fixing permissions on directories...\n";
 system("/usr/bin/ssh nfssupport\@multivac 'find /zstore/CustomerFiles/$subpath -type d -print0 | xargs -0 chmod 770'");
 print "Fixing permissions on files...\n";
 system("/usr/bin/ssh nfssupport\@multivac 'find /zstore/CustomerFiles/$subpath -type f -print0 | xargs -0 chmod 660'");
}

sub usage
{
	print "usage: $0 [-v][-V <n>][-h][-q][-u] /uploads/DATE/TROUBLESHOOT.tar.gz\n";
	print "       -v: verbose output\n";
	print "       -V <n>: debug level <n> output\n";
	print "       -q: quiet - suppress output\n";
	print "       -h: print this message, and exit\n";
	exit 0;
}
